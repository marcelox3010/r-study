install.packages("Metrics")

library("caret")
library("Metrics")

url <- "http://susagi150.mds.net:8983/solr/matriz_informacoes2/select?fl=codigo_ibge%2Canomes_s%2Cpopulacao_censo_2010%2Cqtd_familias_beneficiarias_bolsa_familia%2Cvalor_repassado_bolsa_familia_s&fq=anomes_s%3A%22202303%22&q=*%3A*&rows=1000000&wt=csv"
dados <- read.csv(url)
set.seed(100)

rows <- sample(nrow(dados))

shuffled_dados <-dados[rows,]

split <- round(nrow(dados) * 0.8)

train <- shuffled_dados[1:split,]
train <-(train[!is.na(train$populacao_censo_2010),])
test <- shuffled_dados[split+1:nrow(shuffled_dados),]
test <-(test[!is.na(test$populacao_censo_2010),])

#modelo 1

model1 <- lm(qtd_familias_beneficiarias_bolsa_familia~valor_repassado_bolsa_familia_s, train)
model1
summary(model1)

a <- function(x){ return (-12.102119+((0.001516)*(x))) }
b <- function(x){ return (0.001516+((-12.102119)*(x))) }
a(100)

p1 <- predict(model1, test)
test$p1 <- p1
test$p1_a <- a(test$valor_repassado_bolsa_familia_s)


test$p1 - test$p1_a
test$p1 - test$p1_b

test[,c("p1","p1_a","p1_b")]



plot(test$p1~test$qtd_familias_beneficiarias_bolsa_familia)

#modelo 2

model2 <- lm(qtd_familias_beneficiarias_bolsa_familia~populacao_censo_2010 , train)
model2

p2 <- predict(model2, test)
test$p2 <- p2

plot(test$p2~test$qtd_familias_beneficiarias_bolsa_familia)

#modelo 3

model3 <- lm(qtd_familias_beneficiarias_bolsa_familia~populacao_censo_2010+valor_repassado_bolsa_familia_s , train)
model3

p3 <- predict(model3, test)
test$p3 <- p3

plot(test$p3~test$qtd_familias_beneficiarias_bolsa_familia)

#modelo 4

model4 <- train(
    qtd_familias_beneficiarias_bolsa_familia~populacao_censo_2010, 
    train,
    method = "lm",
    trControl = trainControl(
        method = "cv", 
        number = 10,
        verboseIter = TRUE
    )
)

p4 <- predict(model4, test)
test$p4 <- p4
plot(test$p4~test$qtd_familias_beneficiarias_bolsa_familia)


#modelo 5

# Fit lm model using 5 x 5-fold CV: model
model5 <- train(
    qtd_familias_beneficiarias_bolsa_familia~populacao_censo_2010, 
    train,
    method = "lm",
    trControl = trainControl(
        method = "repeatedcv", 
        number = 10,
        repeats = 10, 
        verboseIter = TRUE
    )
)


p5<- predict(model5, test)

test$p5 <- p5

plot(test$p5~test$qtd_familias_beneficiarias_bolsa_familia)

# Compute errors: error
error1 <- test$qtd_familias_beneficiarias_bolsa_familia - p1
error2 <- test$qtd_familias_beneficiarias_bolsa_familia - p2
error3 <- test$qtd_familias_beneficiarias_bolsa_familia - p3
error4 <- test$qtd_familias_beneficiarias_bolsa_familia - p4
error5 <- test$qtd_familias_beneficiarias_bolsa_familia - p5

n <- nrow(test)

sqrt(sum(error1^2)/n)
sqrt(sum(error2^2)/n)
sqrt(sum(error3^2)/n)
sqrt(sum(error4^2)/n)
sqrt(sum(error5^2)/n)

rmse(test$qtd_familias_beneficiarias_bolsa_familia, p1)
rmse(test$qtd_familias_beneficiarias_bolsa_familia, p2)
rmse(test$qtd_familias_beneficiarias_bolsa_familia, p3)
rmse(test$qtd_familias_beneficiarias_bolsa_familia, p4)
rmse(test$qtd_familias_beneficiarias_bolsa_familia, p5)

